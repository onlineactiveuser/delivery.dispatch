version: "3.9"

services:

  zoo:
    image: confluentinc/cp-zookeeper:latest
    container_name: zoo
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo:2888:3888
    restart: always

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo
    restart: always
    
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: Delivery
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always

  api:
    build:
      context: .
      dockerfile: Api/Dockerfile
    container_name: api
    ports:
      - "5000:8080"
      - "5001:8081"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "http://+:8080"
      ConnectionStrings__PostgreSql: "Host=host.docker.internal;Port=5432;Database=Delivery;Username=postgres;Password=123"
      MongoDbSettings__ConnectionStrings: "mongodb://host.docker.internal:27017"
      MongoDbSettings__DatabaseName: "local"
    depends_on:
      - mongo
      - postgres
      - kafka
    restart: always

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    restart: always

volumes:
  kafka-data:
  mongo-data:
  postgres-data:
